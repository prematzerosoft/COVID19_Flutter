import 'package:covid_19/constant.dart';import 'package:covid_19/widgets/counter.dart';import 'package:covid_19/widgets/my_header.dart';import 'package:flutter/material.dart';import 'package:flutter_svg/flutter_svg.dart';import 'package:http/http.dart' as http;import 'dart:async';import 'dart:convert';void main() => runApp(MyApp());Future<IndiaData> fetchTotalCount() async {  final response =  await http.get('https://api.covid19india.org/data.json');  if (response.statusCode == 200) {    // If the server did return a 200 OK response,    // then parse the JSON    return jsonDecode(response.body);  } else {    // If the server did not return a 200 OK response,    // then throw an exception.    throw Exception('Failed to load data');  }}class IndiaData {  final String confirmedcount;  final String totalDeath;  final String recovered;  IndiaData({this.confirmedcount, this.totalDeath, this.recovered});  factory IndiaData.fromJson(Map<String, dynamic> json) {    List data = json["statewise"];    return IndiaData(      confirmedcount: data[0]['confirmed'],      totalDeath: data[0]['deaths'],      recovered: data[0]['recovered'],    );  }}class MyApp extends StatefulWidget {  // This widget is the root of your application.  @override  _MyAppState createState() => _MyAppState();}class _MyAppState extends State<MyApp> {  @override  Widget build(BuildContext context) {    return MaterialApp(      debugShowCheckedModeBanner: false,      title: 'Covid 19',      theme: ThemeData(          scaffoldBackgroundColor: kBackgroundColor,          fontFamily: "Poppins",          textTheme: TextTheme(            body1: TextStyle(color: kBodyTextColor),          )),      home: HomeScreen(),    );  }}class HomeScreen extends StatefulWidget {  @override  _HomeScreenState createState() => _HomeScreenState();}class _HomeScreenState extends State<HomeScreen> {  Future<IndiaData> indiaData;  String confirmedcount ="0";  String totalDeath="0";  String recovered="0";  Future<String> getConfirmedData() async{  http.Response response = await http.get(Uri.encodeFull("https://api.covid19india.org/data.json"),  headers:{/*    "key":""*/  "Accept":"application/json"  });  Map<String, dynamic> map = jsonDecode(response.body);  List data = map["statewise"];  this.confirmedcount = data[0]["confirmed"];  this.totalDeath = data[0]["deaths"];  this.recovered = data[0]["recovered"];  return ("Success");  }  final controller = ScrollController();  double offset = 0;  @override  void initState() {    // TODO: implement initState    indiaData = fetchTotalCount();    super.initState();    controller.addListener(onScroll);  }  @override  void dispose() {    // TODO: implement dispose    controller.dispose();    super.dispose();  }  void onScroll() {    setState(() {      offset = (controller.hasClients) ? controller.offset : 0;    });  }  @override  Widget build(BuildContext context) {    getConfirmedData();    return Scaffold(      body: SingleChildScrollView(        controller: controller,        child: Column(          children: <Widget>[            MyHeader(              image: "assets/icons/Drcorona.svg",              textTop: "STAY HOME",              textBottom: "STAY SAFE",              offset: offset,            ),            Container(              margin: EdgeInsets.symmetric(horizontal: 20),              padding: EdgeInsets.symmetric(vertical: 10, horizontal: 20),              height: 60,              width: double.infinity,              decoration: BoxDecoration(                color: Colors.white,                borderRadius: BorderRadius.circular(25),                border: Border.all(                  color: Color(0xFFE5E5E5),                ),              ),              child: Row(                children: <Widget>[                  SvgPicture.asset("assets/icons/maps-and-flags.svg"),                  SizedBox(width: 20),                  Expanded(                    child: DropdownButton(                      isExpanded: true,                      underline: SizedBox(),                      icon: SvgPicture.asset("assets/icons/dropdown.svg"),                      value: "India",                      items: [                        'India'                      ].map<DropdownMenuItem<String>>((String value) {                        return DropdownMenuItem<String>(                          value: value,                          child: Text(value),                        );                      }).toList(),                      onChanged: (value) {},                    ),                  ),                ],              ),            ),            SizedBox(height: 20),            Padding(              padding: EdgeInsets.symmetric(horizontal: 20),              child: Column(                children: <Widget>[                  Row(                    children: <Widget>[                      RichText(                        text: TextSpan(                          children: [                            TextSpan(                              text: "Case Update\n",                              style: kTitleTextstyle,                            ),                            TextSpan(                              text: "Newest update May 24",                              style: TextStyle(                                color: kTextLightColor,                              ),                            ),                          ],                        ),                      ),                      Spacer(),                      Text(                        "See details",                        style: TextStyle(                          color: kPrimaryColor,                          fontWeight: FontWeight.w600,                        ),                      ),                    ],                  ),                  SizedBox(height: 20),                  Container(                    padding: EdgeInsets.all(20),                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(20),                      color: Colors.white,                      boxShadow: [                        BoxShadow(                          offset: Offset(0, 4),                          blurRadius: 30,                          color: kShadowColor,                        ),                      ],                    ),                    child: Row(                      mainAxisAlignment:MainAxisAlignment.center,                      //mainAxisAlignment: MainAxisAlignment.spaceBetween,                      children: <Widget>[                        Counter(                          color: kInfectedColor,                          //number: 133839,                          number: int.parse(confirmedcount),                          title: "Total Count",                        )                      ],                    ),                  ),                  SizedBox(height: 20),                  Container(                    padding: EdgeInsets.all(20),                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(20),                      color: Colors.white,                      boxShadow: [                        BoxShadow(                          offset: Offset(0, 4),                          blurRadius: 30,                          color: kShadowColor,                        ),                      ],                    ),                    child: Row(                      mainAxisAlignment:MainAxisAlignment.center,                      //mainAxisAlignment: MainAxisAlignment.spaceBetween,                      children: <Widget>[                        Counter(                          color: kDeathColor,                          number: int.parse(totalDeath),                          title: "Deaths",                        )                      ],                    ),                  ),                  SizedBox(height: 20),                  Container(                    padding: EdgeInsets.all(20),                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(20),                      color: Colors.white,                      boxShadow: [                        BoxShadow(                          offset: Offset(0, 4),                          blurRadius: 30,                          color: kShadowColor,                        ),                      ],                    ),                    child: Row(                      mainAxisAlignment:MainAxisAlignment.center,                      //mainAxisAlignment: MainAxisAlignment.spaceBetween,                      children: <Widget>[                        Counter(                          color: kRecovercolor,                          number: int.parse(recovered),                          //number: int.parse (IndiaData.gettotalDeath),                          title: "Recovered",                        )                      ],                    ),                  ),                  SizedBox(height: 20),                  Row(                    mainAxisAlignment: MainAxisAlignment.spaceBetween,                    children: <Widget>[                      Text(                        "Spread of Virus",                        style: kTitleTextstyle,                      ),                      Text(                        "See details",                        style: TextStyle(                          color: kPrimaryColor,                          fontWeight: FontWeight.w600,                        ),                      ),                    ],                  ),                  Container(                    margin: EdgeInsets.only(top: 20),                    padding: EdgeInsets.all(20),                    height: 178,                    width: double.infinity,                    decoration: BoxDecoration(                      borderRadius: BorderRadius.circular(20),                      color: Colors.white,                      boxShadow: [                        BoxShadow(                          offset: Offset(0, 10),                          blurRadius: 30,                          color: kShadowColor,                        ),                      ],                    ),                    child: Image.asset(                      "assets/images/map.png",                      fit: BoxFit.contain,                    ),                  ),                ],              ),            ),          ],        ),      ),    );  }}